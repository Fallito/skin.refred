<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<variable name="global_TaglineProperty">
		<value condition="!IsEmpty(ListItem.Property(Tagline))">$INFO[ListItem.Property(Tagline)]</value>
		<value condition="IsEmpty(ListItem.Property(Tagline)) + !IsEmpty(ListItem.Property(PlotOutline))">$INFO[ListItem.Property(PlotOutline)]</value>
		<value condition="IsEmpty(ListItem.Property(Tagline)) + IsEmpty(ListItem.Property(PlotOutline))">$INFO[ListItem.Property(Plot)]</value>
	</variable>

<!--STARTUP-->
	<variable name="startup_Status">
		<value>loading</value>
	</variable>

<!--HOME-->
	<variable name="menupos">
		<value condition="Skin.HasSetting(home.menu2)">2</value>
		<value condition="!Skin.HasSetting(home.menu2)">1</value>
	</variable>
	<variable name="widgetpos">
		<value condition="Skin.HasSetting(widgets.center.enabled)">180</value>
		<value condition="!Skin.HasSetting(widgets.center.enabled) | !Skin.HasSetting(home.menu2)">90</value>
	</variable>
	
	<variable name="home_Background">
		<value condition="Player.HasAudio + Skin.HasSetting(home.nowplaying) + !Skin.HasSetting(artistslideshow.disable)">$INFO[MusicPlayer.Property(Fanart_Image)]</value>
		<value condition="Skin.String(HomeBackground,multi)">$INFO[Skin.String(home.background.folder)]</value>
		<value condition="Skin.String(HomeBackground,single)">$INFO[Skin.String(home.background.image)]</value>
		<!--<value condition="Skin.String(HomeBackground,fanart)">$INFO[Window(Home).Property(script.grab.fanart.Video.FanArt)]</value>-->
		<value>backgrounds/fallback/fallback.jpg</value>
	</variable>

	<variable name="home_CustomSelectionVideo">
		<value condition="!IsEmpty(Skin.String(customitem.video1.label)) + StringCompare(Window(Home).Property(customitem.video.number),1)">$INFO[Skin.String(customitem.video1.label)] $INFO[Skin.String(customitem.video1.type),(,)]</value>
		<value condition="!IsEmpty(Skin.String(customitem.video2.label)) + StringCompare(Window(Home).Property(customitem.video.number),2)">$INFO[Skin.String(customitem.video2.label)] $INFO[Skin.String(customitem.video2.type),(,)]</value>
		<value condition="!IsEmpty(Skin.String(customitem.video3.label)) + StringCompare(Window(Home).Property(customitem.video.number),3)">$INFO[Skin.String(customitem.video3.label)] $INFO[Skin.String(customitem.video3.type),(,)]</value>
		<value>$LOCALIZE[231]</value>
	</variable>
	<variable name="home_CustomSelectionMovies">
		<value condition="!IsEmpty(Skin.String(customitem.movies1.label)) + StringCompare(Window(Home).Property(customitem.movies.number),1)">$INFO[Skin.String(customitem.movies1.label)] $INFO[Skin.String(customitem.movies1.type),(,)]</value>
		<value condition="!IsEmpty(Skin.String(customitem.movies2.label)) + StringCompare(Window(Home).Property(customitem.movies.number),2)">$INFO[Skin.String(customitem.movies2.label)] $INFO[Skin.String(customitem.movies2.type),(,)]</value>
		<value condition="!IsEmpty(Skin.String(customitem.movies3.label)) + StringCompare(Window(Home).Property(customitem.movies.number),3)">$INFO[Skin.String(customitem.movies3.label)] $INFO[Skin.String(customitem.movies3.type),(,)]</value>
		<value>$LOCALIZE[231]</value>
	</variable>
	<variable name="home_CustomSelectionTVShows">
		<value condition="!IsEmpty(Skin.String(customitem.tvshows1.label)) + StringCompare(Window(Home).Property(customitem.tvshows.number),1)">$INFO[Skin.String(customitem.tvshows1.label)] $INFO[Skin.String(customitem.tvshows1.type),(,)]</value>
		<value condition="!IsEmpty(Skin.String(customitem.tvshows2.label)) + StringCompare(Window(Home).Property(customitem.tvshows.number),2)">$INFO[Skin.String(customitem.tvshows2.label)] $INFO[Skin.String(customitem.tvshows2.type),(,)]</value>
		<value condition="!IsEmpty(Skin.String(customitem.tvshows3.label)) + StringCompare(Window(Home).Property(customitem.tvshows.number),3)">$INFO[Skin.String(customitem.tvshows3.label)] $INFO[Skin.String(customitem.tvshows3.type),(,)]</value>
		<value>$LOCALIZE[231]</value>
	</variable>
	
<!-- background overlay color for global background -->
	<variable name="diffusebg">
		<value condition="!Skin.HasSetting(backgroundvideo.global)">base_1play</value>
		<value condition="Skin.HasSetting(backgroundvideo.global) + Player.HasAudio">base_3music</value>
		<value condition="Skin.HasSetting(backgroundvideo.global) + Player.HasMedia">base_1play</value>
		<value condition="Skin.HasSetting(backgroundvideo.global) + VideoPlayer.Content(livetv)">base_1play</value>
	</variable>

<!-- hub -->
	<variable name="hubcategory">
		<value condition="Control.IsVisible(5563) + [Container(557).HasFocus(1) | [!Container(557).HasFocus(2) + !Container(557).HasFocus(14)]]">$LOCALIZE[32031]: $LOCALIZE[32032]</value>
		<value condition="Control.IsVisible(5563) + Container(557).HasFocus(2)">$LOCALIZE[32031]: $LOCALIZE[32021]</value>
		<value condition="Control.IsVisible(5563) + Container(557).HasFocus(14)">$LOCALIZE[32031]: $LOCALIZE[32023]</value>
		<value condition="Control.IsVisible(5562) + [Container(556).HasFocus(1) | [!Container(556).HasFocus(2) + !Container(556).HasFocus(14)]]">$LOCALIZE[32031]: $LOCALIZE[32020]</value>
		<value condition="Control.IsVisible(5562) + Container(556).HasFocus(2)">$LOCALIZE[32031]: $LOCALIZE[32021]</value>
		<value condition="Control.IsVisible(5562) + Container(556).HasFocus(14)">$LOCALIZE[32031]: $LOCALIZE[32023]</value>
		<value condition="Control.IsVisible(5564) + [Container(558).HasFocus(1) | [!Container(558).HasFocus(2) + !Container(558).HasFocus(14)]]">$LOCALIZE[32031]: $LOCALIZE[32033]</value>
		<value condition="Control.IsVisible(5564) + Container(558).HasFocus(2)">$LOCALIZE[32031]: $LOCALIZE[32021]</value>
		<value condition="Control.IsVisible(5564) + Container(558).HasFocus(14)">$LOCALIZE[32031]: $LOCALIZE[32034]</value>		
		<value condition="Control.IsVisible(5565) + Container(559).HasFocus(1)">$LOCALIZE[32031]: $LOCALIZE[32037]</value>	
		<value condition="Control.IsVisible(5565) + Container(559).HasFocus(2)">$LOCALIZE[32031]: $LOCALIZE[32040]</value>	
		<value condition="Control.IsVisible(5565) + [Container(559).HasFocus(3) | [!Container(559).HasFocus(1) + !Container(559).HasFocus(2) + !Container(559).HasFocus(4)]">$LOCALIZE[32031]: $LOCALIZE[32038]</value>	
		<value condition="Control.IsVisible(5565) + Container(559).HasFocus(4)">$LOCALIZE[32031]: $LOCALIZE[32041]</value>	
	</variable>
	
	<variable name="hubTitle">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.Label]</value>
		<value condition="Control.IsVisible(5563)">[COLOR Color2]$INFO[Container(5571).ListItem.TVShowTitle]:[/COLOR] $INFO[Container(5571).ListItem.Label]</value>
		<value condition="Control.IsVisible(5564)">[COLOR Color2]$INFO[Container(5581).ListItem.Artist]:[/COLOR] $INFO[Container(5581).ListItem.Label]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).ListItem.TVShowTitle,[COLOR Color2],:[/COLOR] ]$INFO[Container(5591).ListItem.Label]</value>
	</variable>
	
	<variable name="hubProgress">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.PercentPlayed]%</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571).ListItem.PercentPlayed]%</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).ListItem.PercentPlayed]%</value>
	</variable>
	
	<variable name="hubPosition">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).CurrentPage] / $INFO[Container(5561).NumPages]</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571).CurrentPage] / $INFO[Container(5571).NumPages]</value>
		<value condition="Control.IsVisible(5564)">$INFO[Container(5581).CurrentPage] / $INFO[Container(5581).NumPages]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).CurrentPage] / $INFO[Container(5591).NumPages]</value>
	</variable>
	
	<variable name="hubThumb">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.Art(fanart)]</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571).ListItem.Art(fanart)]</value>
		<value condition="Control.IsVisible(5564)">$INFO[Container(5581).ListItem.Art(fanart)]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).ListItem.Art(fanart)]</value>
	</variable>
		
	<variable name="hubSub">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.Duration,, Min]$INFO[Container(5561).ListItem.Year, • ,]$INFO[Container(5561).ListItem.Genre, • ,]</value>
		<value condition="Control.IsVisible(5563)">[COLOR Color3]$INFO[Container(5571).ListItem.Season,$LOCALIZE[20373] ,]$INFO[Container(5571).ListItem.Episode, • $LOCALIZE[20359] ,]$INFO[Container(5571).ListItem.Duration, • , Min]$INFO[Container(5571).ListItem.Premiered, • ,][/COLOR]</value>
		<value condition="Control.IsVisible(5564)">[COLOR Color3]$INFO[Container(5581).ListItem.Year,,]$INFO[Container(5581).ListItem.Genre, • ,][/COLOR]</value>	
		<value condition="Control.IsVisible(5565) + [Container(559).HasFocus(1) | Container(559).HasFocus(2)]">[COLOR Color3]$INFO[Container(5591).ListItem.Year,,]$INFO[Container(5591).ListItem.Genre, • ,][/COLOR]</value>			
		<value condition="Control.IsVisible(5565) + [!Container(559).HasFocus(1) + !Container(559).HasFocus(2)]">[COLOR Color3]$INFO[Container(5591).ListItem.Season,$LOCALIZE[20373] ,]$INFO[Container(5591).ListItem.Episode, • $LOCALIZE[20359] ,]$INFO[Container(5591).ListItem.Duration, • , Min]$INFO[Container(5591).ListItem.Premiered, • ,][/COLOR]</value>			
	</variable>
	
	<variable name="hubRating">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.Rating,rating/imdb/,.png]</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571).ListItem.Rating,rating/imdb/,.png]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).ListItem.Rating,rating/imdb/,.png]</value>
	</variable>
	
	<variable name="hubVideoAspect">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561)ListItem.VideoAspect,flags/video/aspectratio/,.png]</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571)ListItem.VideoAspect,flags/video/aspectratio/,.png]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591)ListItem.VideoAspect,flags/video/aspectratio/,.png]</value>
	</variable>
	
	<variable name="hubAudioChannels">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.AudioChannels,flags/audio/,.png]</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571).ListItem.AudioChannels,flags/audio/,.png]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).ListItem.AudioChannels,flags/audio/,.png]</value>
	</variable>
	
	<variable name="hubAudioCodec">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.AudioCodec,flags/codec/,.png]</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571).ListItem.AudioCodec,flags/codec/,.png]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).ListItem.AudioCodec,flags/codec/,.png]</value>
	</variable>
	
	<variable name="hubCodec">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.VideoCodec,flags/codec/,.png]</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571).ListItem.VideoCodec,flags/codec/,.png]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).ListItem.VideoCodec,flags/codec/,.png]</value>
	</variable>
	
	<variable name="hubResolution">
		<value condition="Control.IsVisible(5562)">$INFO[Container(5561).ListItem.VideoResolution,flags/video/resolution/,.png]</value>
		<value condition="Control.IsVisible(5563)">$INFO[Container(5571).ListItem.VideoResolution,flags/video/resolution/,.png]</value>
		<value condition="Control.IsVisible(5565)">$INFO[Container(5591).ListItem.VideoResolution,flags/video/resolution/,.png]</value>
	</variable>

	
<!-- custom menu onclick -->
	<variable name="customb1_click">
		<value condition="Skin.String(Customb1.9.Path)">$INFO[Skin.String(Customb1.9.Path)]</value>
		<value condition="Skin.String(Customb1.9.Addon)">RunAddon($INFO[Skin.String(Customb1.9.Addon)])</value>
		<value condition="Skin.String(Customb1.9.Exe)">RunScript($INFO[Skin.String(Customb1.9.Exe)])</value>
	</variable>
	
	<variable name="customb2_click">
		<value condition="Skin.String(Customb2.9.Path)">$INFO[Skin.String(Customb2.9.Path)]</value>
		<value condition="Skin.String(Customb2.9.Addon)">RunAddon($INFO[Skin.String(Customb2.9.Addon)])</value>
		<value condition="Skin.String(Customb2.9.Exe)">RunScript($INFO[Skin.String(Customb2.9.Exe)])</value>
	</variable>
	
<!-- background menu logic -->
	<variable name="menu_backgrounds">
		<value condition="ControlGroup(5564).HasFocus()">$INFO[Container(5581).ListItem.Art(fanart)]</value>
		<value condition="ControlGroup(5563).HasFocus()">$INFO[Container(5571).ListItem.Art(fanart)]</value>
		<value condition="ControlGroup(5562).HasFocus()">$INFO[Container(5561).ListItem.Art(fanart)]</value>
		<value condition="ControlGroup(5565).HasFocus()">$INFO[Container(5591).ListItem.Art(fanart)]</value>
		<value condition="Container(9110).HasFocus(1)">overlays/debuggrid720.png</value>
		<value condition="Container(9110).HasFocus(100) + !IsEmpty(Skin.String(videos.bg))">$INFO[Skin.String(videos.bg)]</value>
		<value condition="Container(9110).HasFocus(400) + !IsEmpty(Skin.String(livetv.bg))">$INFO[Skin.String(livetv.bg)]</value>
		<value condition="Container(9110).HasFocus(600) + !IsEmpty(Skin.String(pictures.bg))">$INFO[Skin.String(pictures.bg)]</value>
		<value condition="Container(9110).HasFocus(700) + !IsEmpty(Skin.String(addons.bg))">$INFO[Skin.String(addons.bg)]</value>
		<value condition="Container(9110).HasFocus(800) + !IsEmpty(Skin.String(livetv.bg))">$INFO[Skin.String(settings.bg)]</value>
		<value condition="Container(9110).HasFocus(900) + !IsEmpty(Skin.String(weather.bg))">$INFO[Skin.String(weather.bg)]</value>
		<value condition="Container(9110).HasFocus(901) + !IsEmpty(Skin.String(disc.bg))">$INFO[Skin.String(disc.bg)]</value>
		<value condition="Container(9110).HasFocus(904) + !IsEmpty(Skin.String(fav.bg))">$INFO[Skin.String(fav.bg)]</value>
		<value condition="Container(9110).HasFocus(905) + !IsEmpty(Skin.String(search.bg))">$INFO[Skin.String(search.bg)]</value>
		<value condition="Container(9110).HasFocus(903) + !IsEmpty(Skin.String(yt.bg))">$INFO[Skin.String(yt.bg)]</value>
		<value condition="Container(9110).HasFocus(907) + !IsEmpty(Skin.String(programs.bg))">$INFO[Skin.String(programs.bg)]</value>
		<value condition="Container(9110).HasFocus(908) + !IsEmpty(Skin.String(Customb1main.bg))">$INFO[Skin.String(Customb1main.bg)]</value>
		<value condition="Container(9110).HasFocus(909) + !IsEmpty(Skin.String(Customb2main.bg))">$INFO[Skin.String(Customb2main.bg)]</value>
		<value condition="Container(9110).HasFocus(801) + !IsEmpty(Skin.String(power.bg))">$INFO[Skin.String(power.bg)]</value>
		<value condition="Container(9110).HasFocus(100) + IsEmpty(Skin.String(videos.bg))">backgrounds/fallback/video.jpg</value>
		<value condition="Container(9110).HasFocus(400) + IsEmpty(Skin.String(livetv.bg))">backgrounds/fallback/livetv.jpg</value>
		<value condition="Container(9110).HasFocus(600) + IsEmpty(Skin.String(pictures.bg))">backgrounds/fallback/pictures.jpg</value>
		<value condition="Container(9110).HasFocus(700) + IsEmpty(Skin.String(addons.bg))">backgrounds/fallback/addons.jpg</value>
		<value condition="Container(9110).HasFocus(800) + IsEmpty(Skin.String(settings.bg))">backgrounds/fallback/system.jpg</value>
		<value condition="Container(9110).HasFocus(900) + IsEmpty(Skin.String(weather.bg))">backgrounds/fallback/weather.jpg</value>
		<value condition="Container(9110).HasFocus(901) + IsEmpty(Skin.String(disc.bg))">backgrounds/fallback/disc.jpg</value>
		<value condition="Container(9110).HasFocus(904) + IsEmpty(Skin.String(fav.bg))">backgrounds/fallback/fav.jpg</value>
		<value condition="Container(9110).HasFocus(905) + IsEmpty(Skin.String(search.bg))">backgrounds/fallback/search.jpg</value>
		<value condition="Container(9110).HasFocus(903) + IsEmpty(Skin.String(yt.bg))">backgrounds/fallback/yt.jpg</value>
		<value condition="Container(9110).HasFocus(907) + IsEmpty(Skin.String(programs.bg))">backgrounds/fallback/programs.jpg</value>
		<value condition="Container(9110).HasFocus(908) + IsEmpty(Skin.String(Customb1main.bg))">backgrounds/fallback/fallback2.jpg</value>
		<value condition="Container(9110).HasFocus(909) + IsEmpty(Skin.String(Customb2main.bg))">backgrounds/fallback/fallback2.jpg</value>
		<value condition="Container(9110).HasFocus(801) + IsEmpty(Skin.String(power.bg))">backgrounds/fallback/power.jpg</value>
		<value condition="[Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(802) + [Player.HasMedia | Player.HasAudio] + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(802) + !Player.HasMedia + !Player.HasAudio)]">$INFO[Container(9140).ListItem.Art(fanart)]</value>
		<value condition="[[!Skin.HasSetting(backgroundvideo.global) | !Skin.HasSetting(widgets.enabled)] + Container(9110).HasFocus(802) + [Player.HasMedia | Player.HasAudio] + Skin.HasSetting(home.nowplaying)] | [!Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(802) + !Player.HasMedia + !Player.HasAudio)]">$INFO[Container(9141).ListItem.Art(fanart)]</value>
		<value condition="[Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(500) + [Player.HasMedia | Player.HasAudio] + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(500) + !Player.HasMedia + !Player.HasAudio)]">$INFO[Container(9170).ListItem.Art(fanart)]</value>
		<value condition="[[!Skin.HasSetting(backgroundvideo.global) | !Skin.HasSetting(widgets.enabled)] + Container(9110).HasFocus(500) + [Player.HasMedia | Player.HasAudio] + Skin.HasSetting(home.nowplaying)] | [!Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(500) + !Player.HasMedia + !Player.HasAudio)]">$INFO[Container(9171).ListItem.Art(fanart)]</value>
		<value condition="[Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(300) + [Player.HasMedia | Player.HasAudio] + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(300) + !Player.HasMedia + !Player.HasAudio)]">$INFO[Container(9160).ListItem.Art(fanart)]</value>
		<value condition="[[!Skin.HasSetting(backgroundvideo.global) | !Skin.HasSetting(widgets.enabled)] + Container(9110).HasFocus(300) + [Player.HasMedia | Player.HasAudio] + Skin.HasSetting(home.nowplaying)] | [!Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(300) + !Player.HasMedia + !Player.HasAudio)]">$INFO[Container(9161).ListItem.Art(fanart)]</value>
		<value condition="[Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(200) + [Player.HasMedia | Player.HasAudio] + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(200) + !Player.HasMedia + !Player.HasAudio)]">$INFO[Container(9150).ListItem.Art(fanart)]</value>		
		<value condition="[[!Skin.HasSetting(backgroundvideo.global) | !Skin.HasSetting(widgets.enabled)] + Container(9110).HasFocus(200) + [Player.HasMedia | Player.HasAudio] + Skin.HasSetting(home.nowplaying)] | [!Skin.HasSetting(widgets.enabled) + Container(9110).HasFocus(200) + !Player.HasMedia + !Player.HasAudio)]">$INFO[Container(9151).ListItem.Art(fanart)]</value>
	</variable>
	
	<variable name="menu_widget_thumb">
		<value condition="[[Skin.HasSetting(widgets.enabled) + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + !Player.HasMedia + !Player.HasAudio)]] + Container(9110).HasFocus(802)">$INFO[Container(9140).ListItem.Art(fanart)]</value>
		<value condition="[[Skin.HasSetting(widgets.enabled) + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + !Player.HasMedia + !Player.HasAudio)]] + Container(9110).HasFocus(100)">$INFO[Container(9180).ListItem.Art(fanart)]</value>
		<value condition="[[Skin.HasSetting(widgets.enabled) + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + !Player.HasMedia + !Player.HasAudio)]] + Container(9110).HasFocus(200)">$INFO[Container(9150).ListItem.Art(fanart)]</value>
		<value condition="[[Skin.HasSetting(widgets.enabled) + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + !Player.HasMedia + !Player.HasAudio)]] + Container(9110).HasFocus(300)">$INFO[Container(9160).ListItem.Art(fanart)]</value>
		<value condition="[[Skin.HasSetting(widgets.enabled) + !Skin.HasSetting(home.nowplaying)] | [Skin.HasSetting(widgets.enabled) + !Player.HasMedia + !Player.HasAudio)]] + Container(9110).HasFocus(500)">$INFO[Container(9170).ListItem.Art(fanart)]</value>
		
		<!-- video button -->
		<value condition="Container(9110).HasFocus(100)">$INFO[Container(9180).ListItem.Thumb]</value>
				
		<!-- movie widget invisible -->
		<value condition="[!Skin.HasSetting(widgets.enabled) | [Skin.HasSetting(home.nowplaying) + [Player.HasMedia | Player.HasAudio]]] + Container(9110).HasFocus(200)">$INFO[Container(9151).ListItem.Art(fanart)]</value>
		
		<!-- tvshow widget invisible -->
		<value condition="[!Skin.HasSetting(widgets.enabled) | [Skin.HasSetting(home.nowplaying) + [Player.HasMedia | Player.HasAudio]]] + Container(9110).HasFocus(300)">$INFO[Container(9161).ListItem.Art(fanart)]</value>
		
		<!-- music widget invisible -->
		<value condition="[!Skin.HasSetting(widgets.enabled) | [Skin.HasSetting(home.nowplaying) + [Player.HasMedia | Player.HasAudio]]] + Container(9110).HasFocus(500)">$INFO[Container(9171).ListItem.Art(fanart)]</value>
		
		<!-- inprogress widget invisible -->
		<value condition="[!Skin.HasSetting(widgets.enabled) | [Skin.HasSetting(home.nowplaying) + [Player.HasMedia | Player.HasAudio]]] + Container(9110).HasFocus(802)">$INFO[Container(9181).ListItem.Art(fanart)]</value>
			
	</variable>
	
	
	
<!--widget cat-->
	<variable name="widget_movie_cat">
		<value condition="!Skin.HasSetting(widgets.randommovies.enabled)">plugin://service.library.data.provider?type=recentmovies&reload=$INFO[Window.Property(recentmovies)]</value>
		<value condition="Skin.HasSetting(widgets.randommovies.enabled)">plugin://service.library.data.provider?type=randommovies&reload=$INFO[Window.Property(randommovies)]</value>
	</variable>
	<variable name="widget_episode_cat">
		<value condition="!Skin.HasSetting(widgets.randomepisodes.enabled)">plugin://service.library.data.provider?type=recentepisodes&reload=$INFO[Window.Property(recentepisodes)]</value>
		<value condition="Skin.HasSetting(widgets.randomepisodes.enabled)">plugin://service.library.data.provider?type=randomepisodes&reload=$INFO[Window.Property(randomepisodes)]</value>
	</variable>
	<variable name="widget_inprogress_cat">
		<value condition="!Skin.HasSetting(widgets.inprogressmovies.enabled)">plugin://service.library.data.provider?type=recommendedepisodes&reload=$INFO[Window.Property(recommendedepisodes)]</value>
		<value condition="Skin.HasSetting(widgets.inprogressmovies.enabled)">plugin://service.library.data.provider?type=recommendedmovies&reload=$INFO[Window.Property(recommendedmovies)]</value>
	</variable>
	
<!--widget  inprogress-->
	<variable name="widget_inprogress_poster">
		<value condition="Skin.HasSetting(widgets.inprogressmovies.enabled)">$INFO[ListItem.Thumb]</value>
		<value condition="!Skin.HasSetting(widgets.inprogressmovies.enabled)">$INFO[ListItem.Art(tvshow.poster)]</value>
	</variable>
		
<!--widget music-->
	<variable name="widget_music_cat">
		<value condition="!Skin.HasSetting(widgets.randommusic.enabled)">plugin://service.library.data.provider?type=recentalbums&reload=$INFO[Window.Property(recentalbums)]</value>
		<value condition="Skin.HasSetting(widgets.randommusic.enabled)">plugin://service.library.data.provider?type=randomalbums&reload=$INFO[Window.Property(randomalbums)]</value>
	</variable>
	
<!--widget season episode format-->
	<variable name="widget_episodenr">
		<value condition="IntegerGreaterThan(ListItem.Season,9) + IntegerGreaterThan(ListItem.Episode,9)">$INFO[ListItem.Season,[COLOR Color2]S,]$INFO[ListItem.Episode,E,[/COLOR] ]$INFO[ListItem.Label]</value>
		<value condition="!IntegerGreaterThan(ListItem.Season,9) + IntegerGreaterThan(ListItem.Episode,9)">$INFO[ListItem.Season,[COLOR Color2]S0,]$INFO[ListItem.Episode,E,[/COLOR] ]$INFO[ListItem.Label]</value>
		<value condition="IntegerGreaterThan(ListItem.Season,9) + !IntegerGreaterThan(ListItem.Episode,9)">$INFO[ListItem.Season,[COLOR Color2]S,]$INFO[ListItem.Episode,E0,[/COLOR] ]$INFO[ListItem.Label]</value>
		<value condition="!IntegerGreaterThan(ListItem.Season,9) + !IntegerGreaterThan(ListItem.Episode,9)">$INFO[ListItem.Season,[COLOR Color2]S0,]$INFO[ListItem.Episode,E0,[/COLOR] ]$INFO[ListItem.Label]</value>
	</variable>
	
<!--MENU-->
	<variable name="view_Layout">
		<value condition="Control.IsVisible(52)">$LOCALIZE[31120]: $LOCALIZE[31122]</value>
		<value condition="Control.IsVisible(55)">$LOCALIZE[31120]: RightList</value>
		<value condition="Control.IsVisible(521)">$LOCALIZE[31120]: $LOCALIZE[31121]</value>
		<value condition="Control.IsVisible(522)">$LOCALIZE[31120]: $LOCALIZE[31122]</value>
		<value condition="Control.IsVisible(53)">$LOCALIZE[31120]: $LOCALIZE[31126]</value>
		<value condition="Control.IsVisible(531)">$LOCALIZE[31120]: $LOCALIZE[31125]</value>
		<value condition="Control.IsVisible(54)">$LOCALIZE[31120]: $LOCALIZE[31124]</value>
		<value condition="Control.IsVisible(541)">$LOCALIZE[31120]: $LOCALIZE[31123]</value>
		<value condition="Control.IsVisible(57)">$LOCALIZE[31120]: $LOCALIZE[31123]</value>
		<value condition="Control.IsVisible(571)">$LOCALIZE[31120]: $LOCALIZE[31124]</value>
		<value condition="Control.IsVisible(572)">$LOCALIZE[31120]: $LOCALIZE[31123]</value>
		<value condition="Control.IsVisible(574)">$LOCALIZE[31120]: $LOCALIZE[31124]</value>
	</variable>

<!--pvr recording widget -->
	<variable name="rec_Label">
		<value condition="!PVR.IsRecording + PVR.HasNonRecordingTimer">$LOCALIZE[32024]</value>
		<value condition="PVR.IsRecording">$LOCALIZE[32025]</value>
	</variable>
	<variable name="rec_Title">
		<value condition="!PVR.IsRecording + PVR.HasNonRecordingTimer">$INFO[Pvr.NextRecordingTitle]</value>
		<value condition="PVR.IsRecording">$INFO[Pvr.NowRecordingTitle]</value>
	</variable>
	<variable name="rec_Channel">
		<value condition="PVR.IsRecording">$INFO[Pvr.NowRecordingChannel]</value>
		<value condition="!PVR.IsRecording + PVR.HasNonRecordingTimer">$INFO[Pvr.NextRecordingChannel]</value>
	</variable>
	<variable name="rec_ChannelIcon">
		<value condition="PVR.IsRecording">$INFO[Pvr.NowRecordingChannelIcon]</value>
		<value condition="!PVR.IsRecording + PVR.HasNonRecordingTimer">$INFO[Pvr.NextRecordingChannelIcon]</value>
	</variable>
	<variable name="rec_Time">
		<value condition="PVR.IsRecording">$INFO[Pvr.NowRecordingDateTime]</value>
		<value condition="!PVR.IsRecording + PVR.HasNonRecordingTimer">$INFO[Pvr.NextRecordingDateTime]</value>
	</variable>
	
<!--TOAST-->
	<variable name="toast_Top">
		<value condition="SubString(System.Time,AM,right)">[B]$INFO[System.Time(h),,:]$INFO[System.Time(mm)][/B]AM</value>
		<value condition="SubString(System.Time,PM,right)">[B]$INFO[System.Time(h),,:]$INFO[System.Time(mm)][/B]PM</value>
		<value>[B]$INFO[System.Time][/B]</value>
	</variable>
	<variable name="toast_Bottom">
		<value condition="!Window.IsActive(fullscreenvideo)">$INFO[System.Date(DDD)] $INFO[System.Date(d)] $INFO[System.Date(MMM)]</value>
		<value condition="Window.IsActive(fullscreenvideo)">$LOCALIZE[31323] $INFO[Player.FinishTime]</value>
	</variable>
	<variable name="toast_PVRrec">		
		<value condition="Skin.HasSetting(overlay.pvr) + PVR.HasNonRecordingTimer">$LOCALIZE[32026]: $INFO[Pvr.NextRecordingChannel,, • ]$INFO[Pvr.NextRecordingTitle]</value>
		<value condition="Skin.HasSetting(overlay.pvr) + PVR.IsRecording">$LOCALIZE[32027]: $INFO[Pvr.NowRecordingChannel,, • ]$INFO[Pvr.NowRecordingTitle]</value>	
	</variable>
	<variable name="toast_Video">
		<value condition="VideoPlayer.Content(livetv)">$LOCALIZE[209]$INFO[VideoPlayer.NextTitle,: ]</value>
		<value condition="VideoPlayer.Content(episodes) + !IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="VideoPlayer.Content(movies) + !IsEmpty(VideoPlayer.Director)">$INFO[VideoPlayer.Director]</value>
		<value condition="VideoPlayer.Content(musicvideos) + !IsEmpty(VideoPlayer.Artist)">$INFO[VideoPlayer.Artist]</value>
		<value>$INFO[VideoPlayer.Duration,, $LOCALIZE[31701]]</value>
	</variable>
	<variable name="toast_Music">
		<value condition="!Player.IsInternetStream">$INFO[MusicPlayer.Artist]</value>
		<value>$INFO[MusicPlayer.Duration,, $LOCALIZE[31701]]</value>
	</variable>
	<variable name="toast_Weather">
		<value condition="IntegerGreaterThan(Player.Volume,0) + Weather.IsFetched">$INFO[Window(weather).Property(Current.FanartCode),weather/small/,.png]</value>
		<value condition="IntegerGreaterThan(Player.Volume,0) + !Weather.IsFetched">weather/small/na.png</value>
	</variable>
	<variable name="home_Weather">
		<value condition="IntegerGreaterThan(Player.Volume,0) + Weather.IsFetched">$INFO[Window(weather).Property(Current.FanartCode),weather/,.png]</value>
		<value condition="IntegerGreaterThan(Player.Volume,0) + !Weather.IsFetched">weather/na.png</value>
	</variable>	
	<variable name="toast_Recording">
		<value condition="IntegerGreaterThan(Player.Volume,0) + PVR.HasNonRecordingTimer">DefaultTimer.png</value>
		<value condition="IntegerGreaterThan(Player.Volume,0) + PVR.IsRecording">$INFO[PVR.NowRecordingChannelIcon]</value>
	</variable>


<!--GLOBAL-->
	<variable name="global_Glass">
		<value condition="Skin.HasSetting(globalGlass.disable)">Skin.HasSetting(globalGlass.disable)</value>
		<value condition="!Skin.HasSetting(globalGlass.disable)">!Skin.HasSetting(globalGlass.disable)</value>
	</variable>
	<variable name="fanart_Fallback">
		<value condition="IsEmpty(ListItem.Property(Fanart_Image)) + IsEmpty(ListItem.Art(Fanart))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Art(Fanart)]</value>
		<value condition="!IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value>thumbs/default_Landscape.png</value>
	</variable>
	<variable name="fanart_Fallback.Player">
		<value condition="Player.HasAudio + IsEmpty(MusicPlayer.Property(Fanart_Image))">$INFO[MusicPlayer.Cover]</value>
		<value condition="Player.HasAudio + !IsEmpty(MusicPlayer.Property(Fanart_Image))">$INFO[MusicPlayer.Property(Fanart_Image)]</value>
		<value condition="Player.HasVideo + IsEmpty(Player.Art(fanart))">$INFO[Player.Art(thumb)]</value>
		<value condition="Player.HasVideo + !IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
	</variable>

	<variable name="global_Background">
		<value condition="Control.IsVisible(556) + !Container(556).HasFocus(1)">$INFO[Container(5561).ListItem.Thumb]</value>
		<value condition="Control.IsVisible(556) + Container(556).HasFocus(1)">$INFO[Container(5561).ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(VideoLibrary) | Window.IsActive(Videos)]">backgrounds/fallback/fallback.jpg</value>
		<value condition="[Window.IsActive(pvr)]">backgrounds/fallback/livetv2.jpg</value>
		<value condition="[Window.IsActive(musicfiles) | Window.IsActive(musiclibrary) | Window.IsActive(musicplaylisteditor)]">backgrounds/fallback/addons.jpg</value>
		<value condition="Window.IsActive(pictures) + !Control.IsVisible(531)">backgrounds/fallback/pictures.jpg</value>
		<value condition="Window.IsActive(programs)">backgrounds/fallback/programs.jpg</value>
		<value condition="Window.IsActive(weather) + !Skin.HasSetting(fanart.weather)">backgrounds/fallback/weather2.jpg</value>
		<value condition="Window.IsActive(settings) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(filemanager) | Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsActive(skinsettings)">backgrounds/fallback/refred.jpg</value>
		<value condition="Window.IsActive(addonbrowser)">backgrounds/fallback/addons-thumb.jpg</value>
	</variable>

	<variable name="global_Itemcount">
		<value condition="[Window.IsActive(programs) | Window.IsActive(pictures) | Window.IsActive(musiclibrary) | Window.IsActive(musicfiles) | Window.IsActive(videolibrary) | Window.IsActive(videoplaylist) | Window.IsActive(addonbrowser) | Window.IsActive(musicplaylist)] + ![Window.IsActive(movieinformation) | Window.IsActive(musicinformation) | Window.IsActive(pvr) | Window.IsActive(script-globalsearch-main.xml)]">[B]$INFO[Container.NumItems][/B] $LOCALIZE[31143], $LOCALIZE[31144] $INFO[Container.SortMethod] </value>
		<value condition="Window.IsActive(Weather)">[B]$INFO[Window(Weather).Property(Location)][/B] $INFO[Window(Weather).Property(Updated)]</value>
		<value condition="Window.IsActive(filemanager) + Control.HasFocus(20)">[B]$INFO[Container(20).NumItems][/B] $LOCALIZE[31143]</value>
		<value condition="Window.IsActive(filemanager) + Control.HasFocus(21)">[B]$INFO[Container(21).NumItems][/B] $LOCALIZE[31143]</value>
		<value condition="Window.IsActive(pvr)">[B]$INFO[Container.NumItems][/B] $LOCALIZE[31143]</value>
		<value condition="Window.IsActive(63)">[B]$INFO[Container(52).NumItems][/B] $LOCALIZE[31143]</value>
	</variable>

	<variable name="unwatchedinfo">
		<!--<value condition="Container.Content(movies)">$INFO[Window(0).Property(Movies.Unwatched),$LOCALIZE[32003] ,]</value>-->
		<value condition="Container.Content(seasons)">$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[32000] ,]</value>
		<!--<value condition="Container.Content(tvshows)">$INFO[Window(0).Property(Episodes.Unwatched),$LOCALIZE[32001] ,]</value>-->
	</variable>
	
<!--MEDIA INFO-->
	<variable name="global_Title">
		<value condition="Window.IsActive(videoplaylist) + !IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.Title]</value>
		<value condition="Window.IsActive(videoplaylist) + IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.Label]</value>
		<value condition="Container.Content(episodes) + [SubString(Container.FolderName,$LOCALIZE[20387]) | SubString(Container.FolderPath,special://skin/playlists/) | SubString(Container.FolderPath,special://profile/playlists/)] + !IsEmpty(ListItem.Title)">$INFO[ListItem.TVShowTitle]$INFO[ListItem.Title,: ]</value>
		<value condition="Container.Content(episodes) + !IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="Container.Content(musicvideos) + !IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="[SubString(Container.FolderPath,musicdb://singles/) | SubString(Container.FolderPath,musicdb://top100/songs/)] + !IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="Container.Content(songs) + !IsEmpty(ListItem.Title)">$INFO[ListItem.Tracknumber,,. ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>

	<variable name="global_Info">
		<value condition="Window.IsActive(videoplaylist) + IsEmpty(ListItem.Title)">$VAR[video_Type,, • ]$INFO[ListItem.Duration,, $LOCALIZE[31701]] $INFO[ListItem.Size, • ]$INFO[ListItem.Date, • ]</value>
		<value condition="Window.IsActive(videoplaylist) + !IsEmpty(ListItem.TVShowTitle) + IsEmpty(ListItem.Artist)">$INFO[ListItem.TVShowTitle,,: ]$INFO[ListItem.Season,$LOCALIZE[20373] , -] $INFO[ListItem.Episode,$LOCALIZE[20359] ]</value>
		<value condition="Window.IsActive(videoplaylist) + IsEmpty(ListItem.TVShowTitle) + IsEmpty(ListItem.Artist)">$VAR[video_Type,, • ]$INFO[ListItem.Genre]</value>
		<value condition="Window.IsActive(videoplaylist) + !IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
		<value condition="Window.IsActive(videoplaylist) + IsEmpty(ListItem.TVShowTitle) + IsEmpty(ListItem.Artist) + IsEmpty(Listitem.Genre)">$INFO[ListItem.Path]</value>
		<value condition="Container.Content(sets)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(movies)">$VAR[video_Type,, • ]$INFO[ListItem.Year]$INFO[ListItem.Duration, • , $LOCALIZE[31701]]$INFO[ListItem.Genre, • ]</value>
		<value condition="Container.Content(tvshows) + !IsEmpty(Window(Home).Property(NextAired.Label))">$INFO[ListItem.Property(UnWatchedEpisodes)] $VAR[episodes_UnwatchedCountLabel]$VAR[nextaired_Info, • ]</value>
		<value condition="Container.Content(tvshows) + IsEmpty(Window(Home).Property(NextAired.Label)) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Property(UnWatchedEpisodes)] $VAR[episodes_UnwatchedCountLabel]</value>
		<value condition="Container.Content(tvshows) + IsEmpty(Window(Home).Property(NextAired.Label)) + IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(seasons) + IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.Property(UnWatchedEpisodes)] $VAR[episodes_UnwatchedCountLabel]</value>
		<value condition="Container.Content(episodes) + [IsEmpty(ListItem.Season) + IsEmpty(ListItem.Episode)]">$INFO[ListItem.Premiered]</value>
		<value condition="Container.Content(episodes) + ListItem.Property(IsSpecial)">$LOCALIZE[20381]$INFO[ListItem.Episode, - ]$INFO[ListItem.Premiered, • ]$VAR[video_Type, • ]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Season,$LOCALIZE[20373] , - ]$INFO[ListItem.Episode,$LOCALIZE[20359] ]$INFO[ListItem.Premiered, • ]$VAR[video_Type, • ]</value>
		<value condition="Container.Content(musicvideos)">$INFO[ListItem.Artist]$INFO[ListItem.Album, • ]$VAR[video_Type, • ]</value>
		<value condition="Container.Content(files) + !SubString(Container.FolderPath,plugin://)">$VAR[video_Type,, • ]$INFO[ListItem.Date]$INFO[ListItem.Size, • ]$INFO[ListItem.Duration, • , $LOCALIZE[12391]]</value>
		<value condition="Container.Content(artists) + !IsEmpty(ListItem.Property(Artist_Genre))">$INFO[ListItem.Property(Artist_Genre)]</value>
		<value condition="Container.Content(artists) + IsEmpty(ListItem.Property(Artist_Genre)) + !IsEmpty(ListItem.Artist)">$LOCALIZE[31145]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Artist]$INFO[ListItem.Year, • ]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Artist]$INFO[ListItem.FileExtension, • ]</value>
		<value condition="Container.Content(addons) + SubString(Container.FolderPath,addons://sources/)">$INFO[ListItem.Property(Addon.Summary)]</value>
		<value condition="Container.Content(addons) + [SubString(Container.FolderPath,addons://outdated/) | SubString(Container.FolderPath,//disabled/) | SubString(Container.FolderPath,//enabled/)]">$INFO[ListItem.Property(Addon.Version),$LOCALIZE[24051] ]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.Property(Addon.Version),$LOCALIZE[24051] ]$INFO[ListItem.Property(Addon.Status), • ]</value>
		<value condition="Window.IsActive(pictures) + !IsEmpty(ListItem.PictureLongDateTime)">$INFO[ListItem.PictureLongDateTime]</value>
		<value condition="Window.IsActive(pictures) + IsEmpty(ListItem.PictureLongDateTime) + !SubString(Container.FolderPath,addons://sources/)">$INFO[ListItem.Date]</value>
		<value condition="!IsEmpty(ListItem.Studio)">$INFO[ListItem.Studio]</value>
		<value condition="Control.IsVisible(9151)  + Control.HasFocus(9150)">$INFO[Container(9150).ListItem.Year,, • ]$INFO[Container(9150).ListItem.Duration,, Min • ]$INFO[Container(9150).ListItem.Genre]</value>
		<value condition="Control.IsVisible(9161) + Control.HasFocus(9160)">[COLOR Color3]$INFO[Container(9160).ListItem.Season,$LOCALIZE[20373] ,]$INFO[Container(9160).ListItem.Episode, • $LOCALIZE[20359] ,]$INFO[Container(9160).ListItem.Duration, • , Min]$INFO[Container(9160).ListItem.Premiered, • ,][/COLOR]</value>		
		<value condition="Control.IsVisible(9141) + Control.HasFocus(9140) + !Skin.HasSetting(widgets.inprogressmovies.enabled)">[COLOR Color3]$INFO[Container(9140).ListItem.Season,$LOCALIZE[20373] ,]$INFO[Container(9140).ListItem.Episode, • $LOCALIZE[20359] ,]$INFO[Container(9140).ListItem.Duration, • , Min]$INFO[Container(9140).ListItem.Premiered, • ,][/COLOR]</value>
		<value condition="Control.IsVisible(9141) + Control.HasFocus(9140) + Skin.HasSetting(widgets.inprogressmovies.enabled)">$INFO[Container(9140).ListItem.Year,, • ]$INFO[Container(9140).ListItem.Duration,, Min • ]$INFO[Container(9140).ListItem.Genre]</value>
	</variable>
	
	<variable name="global_Info_Short">
		<value condition="Window.IsActive(videoplaylist) + IsEmpty(ListItem.Title)">$VAR[video_Type,, • ]$INFO[ListItem.Duration,, $LOCALIZE[31701]] $INFO[ListItem.Size, • ]$INFO[ListItem.Date, • ]</value>
		<value condition="Window.IsActive(videoplaylist) + !IsEmpty(ListItem.TVShowTitle) + IsEmpty(ListItem.Artist)">$INFO[ListItem.TVShowTitle,,: ]$INFO[ListItem.Season,$LOCALIZE[20373] , -] $INFO[ListItem.Episode,$LOCALIZE[20359] ]</value>
		<value condition="Window.IsActive(videoplaylist) + IsEmpty(ListItem.TVShowTitle) + IsEmpty(ListItem.Artist)">$VAR[video_Type,, • ]$INFO[ListItem.Genre]</value>
		<value condition="Window.IsActive(videoplaylist) + !IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
		<value condition="Window.IsActive(videoplaylist) + IsEmpty(ListItem.TVShowTitle) + IsEmpty(ListItem.Artist) + IsEmpty(Listitem.Genre)">$INFO[ListItem.Path]</value>
		<value condition="Container.Content(sets)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(movies)">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(tvshows) + !IsEmpty(Window(Home).Property(NextAired.Label))">$INFO[ListItem.Property(UnWatchedEpisodes)] $VAR[episodes_UnwatchedCountLabel]$VAR[nextaired_Info, • ]</value>
		<value condition="Container.Content(tvshows) + IsEmpty(Window(Home).Property(NextAired.Label)) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Property(UnWatchedEpisodes)] $VAR[episodes_UnwatchedCountLabel]</value>
		<value condition="Container.Content(tvshows) + IsEmpty(Window(Home).Property(NextAired.Label)) + IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(seasons) + IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.Property(UnWatchedEpisodes)] $VAR[episodes_UnwatchedCountLabel]</value>
		<value condition="Container.Content(episodes) + [IsEmpty(ListItem.Season) + IsEmpty(ListItem.Episode)]">$INFO[ListItem.Premiered]</value>
		<value condition="Container.Content(episodes) + ListItem.Property(IsSpecial)">$LOCALIZE[20381]$INFO[ListItem.Episode, - ]$INFO[ListItem.Premiered, • ]$VAR[video_Type, • ]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Season,$LOCALIZE[20373] , - ]$INFO[ListItem.Episode,$LOCALIZE[20359] ]$VAR[video_Type, • ]</value>
		<value condition="Container.Content(musicvideos)">$INFO[ListItem.Artist]$INFO[ListItem.Album, • ]$VAR[video_Type, • ]</value>
		<value condition="Container.Content(files) + !SubString(Container.FolderPath,plugin://)">$VAR[video_Type,, • ]$INFO[ListItem.Date]$INFO[ListItem.Size, • ]$INFO[ListItem.Duration, • , $LOCALIZE[12391]]</value>
		<value condition="Container.Content(artists) + !IsEmpty(ListItem.Property(Artist_Genre))">$INFO[ListItem.Property(Artist_Genre)]</value>
		<value condition="Container.Content(artists) + IsEmpty(ListItem.Property(Artist_Genre)) + !IsEmpty(ListItem.Artist)">$LOCALIZE[31145]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Artist]$INFO[ListItem.Year, • ]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Artist]$INFO[ListItem.FileExtension, • ]</value>
		<value condition="Container.Content(addons) + SubString(Container.FolderPath,addons://sources/)">$INFO[ListItem.Property(Addon.Summary)]</value>
		<value condition="Container.Content(addons) + [SubString(Container.FolderPath,addons://outdated/) | SubString(Container.FolderPath,//disabled/) | SubString(Container.FolderPath,//enabled/)]">$INFO[ListItem.Property(Addon.Version),$LOCALIZE[24051] ]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.Property(Addon.Version),$LOCALIZE[24051] ]$INFO[ListItem.Property(Addon.Status), • ]</value>
		<value condition="Window.IsActive(pictures) + !IsEmpty(ListItem.PictureLongDateTime)">$INFO[ListItem.PictureLongDateTime]</value>
		<value condition="Window.IsActive(pictures) + IsEmpty(ListItem.PictureLongDateTime) + !SubString(Container.FolderPath,addons://sources/)">$INFO[ListItem.Date]</value>
		<value condition="!IsEmpty(ListItem.Studio)">$INFO[ListItem.Studio]</value>
	</variable>

	<variable name="global_Info.Addon">
		<value condition="Container.Content(movies) + !IsEmpty(ListItem.Property(ReleaseDate))">$INFO[ListItem.Property(ReleaseDate)]$INFO[ListItem.Genre, • ]</value>
		<value condition="[Container.Content(movies) | Container.Content(tvshows)] + !IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration,, $LOCALIZE[31701]]$INFO[ListItem.Genre, • ]</value>
		<value condition="[Container.Content(movies) | Container.Content(tvshows)] + IsEmpty(ListItem.Duration) + !IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Season,$LOCALIZE[20373] , - ]$INFO[ListItem.Episode,, • $LOCALIZE[20359]]$INFO[ListItem.Premiered]</value>
		<value condition="!IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
		<value condition="!IsEmpty(ListItem.Date)">$INFO[ListItem.Date]</value>
		<value condition="!IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration]</value>
		<value condition="!IsEmpty(ListItem.Studio)">$INFO[ListItem.Studio]</value>
	</variable>

	<variable name="global_Plot">
		<value condition="Container.Content(artists)">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="Container.Content(seasons) + !IsEmpty(ListItem.Title) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[Container.ShowPlot]</value>
		<value condition="[Container.Content(addons) | Container.Content(programs)] + !SubString(ListItem.Icon,default)">$INFO[ListItem.Property(Addon.Description)]</value>
		<value condition="Control.IsVisible(50) + Container.Content(movies) + !IsEmpty(ListItem.Plotoutline)">[UPPERCASE][B]$INFO[ListItem.Tagline,,[CR]][/B][/UPPERCASE]$INFO[ListItem.Plotoutline]</value>
		<value condition="Control.IsVisible(50) + Container.Content(movies) + IsEmpty(ListItem.Plotoutline)">[UPPERCASE][B]$INFO[ListItem.Tagline,,[CR]][/B][/UPPERCASE]$INFO[ListItem.Plot]</value>
		<value condition="Control.IsVisible(50) + Container.Content(tvshows) + !IsEmpty(ListItem.Plot)">[UPPERCASE][B]$VAR[nextaired_Info,,[CR]][/B][/UPPERCASE]$INFO[ListItem.Plot]</value>
		<value condition="!IsEmpty(ListItem.Plotoutline)">$INFO[ListItem.Plotoutline]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	
	<variable name="global_Plot_MusicLeftList">
		<value condition="Container.Content(artists)">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!IsEmpty(ListItem.Plotoutline)">$INFO[ListItem.Plotoutline]</value>
		<value>$INFO[Container().ListItem().Property(Artist_Description)]</value>
	</variable>

	<variable name="nextaired_Info">
		<value condition="StringCompare(Window(Home).Property(NextAired.Status),cancelled/ended)">$INFO[Window(Home).Property(NextAired.Status)]</value>
		<value condition="!IsEmpty(Window(Home).Property(NextAired.NextDate))">$INFO[Window(Home).Property(NextAired.Status)]$INFO[Window(Home).Property(NextAired.NextDate), • $LOCALIZE[31502] ]</value>	
		<value condition="IsEmpty(Window(Home).Property(NextAired.NextDate))">$INFO[Window(Home).Property(NextAired.Status)]$INFO[Window(Home).Property(NextAired.LatestDate), • $LOCALIZE[31502] ]</value>
	</variable>
	<variable name="nextaired_Header">
		<value condition="StringCompare(Window(Home).Property(tvguide),monday)">$INFO[Container(200).Listitem.Property(NextDate),$LOCALIZE[11] ]</value>
		<value condition="StringCompare(Window(Home).Property(tvguide),tuesday)">$INFO[Container(201).Listitem.Property(NextDate),$LOCALIZE[12] ]</value>
		<value condition="StringCompare(Window(Home).Property(tvguide),wednesday)">$INFO[Container(202).Listitem.Property(NextDate),$LOCALIZE[13] ]</value>
		<value condition="StringCompare(Window(Home).Property(tvguide),thursday)">$INFO[Container(203).Listitem.Property(NextDate),$LOCALIZE[14] ]</value>
		<value condition="StringCompare(Window(Home).Property(tvguide),friday)">$INFO[Container(204).Listitem.Property(NextDate),$LOCALIZE[15] ]</value>
		<value condition="StringCompare(Window(Home).Property(tvguide),saturday)">$INFO[Container(205).Listitem.Property(NextDate),$LOCALIZE[16] ]</value>
		<value condition="StringCompare(Window(Home).Property(tvguide),sunday)">$INFO[Container(206).Listitem.Property(NextDate),$LOCALIZE[17] ]</value>
	</variable>

	<variable name="gallery_Title">
		<value condition="Container.Content(episodes) + !SubString(ListItem.Icon,default)">$INFO[ListItem.Episode,,. ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="gallery_Header">
		<value condition="Container.Content(tvshows)">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(movies) + ListItem.IsFolder + SubString(Container.FolderPath,videodb) + !IsEmpty(ListItem.Title)">$INFO[ListItem.Year]</value><!--movie set-->
		<value condition="Container.Content(movies) + !IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>
		<value condition="Container.Content(movies) + IsEmpty(ListItem.Tagline) + !IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value condition="Container.Content(movies) + IsEmpty(ListItem.Tagline) + IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.Plot]</value>
		<value condition="Window.IsActive(pictures) + !IsEmpty(ListItem.PictureLongDateTime)">$INFO[ListItem.PictureLongDateTime]</value>
		<value condition="Window.IsActive(pictures) + IsEmpty(ListItem.PictureLongDateTime)">$LOCALIZE[31146]</value>
		<value>$INFO[ListItem.Year]</value>
	</variable>
	<variable name="gallery_Info">
		<value condition="Container.Content(movies) + ![ListItem.IsFolder + SubString(Container.FolderPath,videodb) + !IsEmpty(ListItem.Title)]">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(tvshows) + !IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.Property(UnWatchedEpisodes)] $VAR[episodes_UnwatchedCountLabel]</value>
		<value condition="Window.IsActive(pictures) + !IsEmpty(ListItem.PictureCamMake)">$LOCALIZE[21823]$INFO[ListItem.PictureCamMake,: ]$INFO[ListItem.PictureCamModel, ]</value>
		<value condition="Window.IsActive(pictures) + IsEmpty(ListItem.PictureCamMake)">$LOCALIZE[31173]</value>
	</variable>
	<variable name="gallery_Info2">
		<value condition="Container.Content(movies) + ![ListItem.IsFolder + SubString(Container.FolderPath,videodb) + !IsEmpty(ListItem.Title)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration,, $LOCALIZE[31701]]</value>
		<value condition="Container.Content(tvshows) + !IsEmpty(Window(Home).Property(NextAired.NextDate))">$INFO[Window(Home).Property(NextAired.NextDate),$LOCALIZE[31502] ]</value>
		<value condition="Container.Content(tvshows) + IsEmpty(Window(Home).Property(NextAired.NextDate)) + StringCompare(Window(Home).Property(NextAired.Status),canceled/ended)">$INFO[Window(Home).Property(NextAired.Status)]</value>
		<value condition="Container.Content(tvshows) + IsEmpty(Window(Home).Property(NextAired.NextDate)) + !StringCompare(Window(Home).Property(NextAired.Status),canceled/ended)">$INFO[Window(Home).Property(NextAired.LatestDate),$LOCALIZE[31501] ]</value>
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.PictureResolution,$LOCALIZE[21805]: ]</value>
	</variable>

	<variable name="movie_Info.Date">
		<value condition="Container.Content(movies) + !IsEmpty(ListItem.Property(ReleaseDate))">$INFO[ListItem.Property(ReleaseDate)]</value>
		<value>$INFO[ListItem.Year]$INFO[ListItem.Duration, • , $LOCALIZE[31701]]</value>
	</variable>

	<variable name="artist_OriginPrefix">
		<value condition="!IsEmpty(ListItem.Property(Artist_Born))">$LOCALIZE[21893]</value>
		<value condition="!IsEmpty(ListItem.Property(Artist_Formed))">$LOCALIZE[21894]</value>
		<value condition="!IsEmpty(ListItem.Property(Artist_Died))">$LOCALIZE[21897]</value>
		<value condition="!IsEmpty(ListItem.Property(Artist_Disbanded))">$LOCALIZE[21896]</value>
	</variable>
	<variable name="artist_Origin">
		<value condition="!IsEmpty(ListItem.Property(Artist_Born))">$INFO[ListItem.Property(Artist_Born)]</value>
		<value condition="!IsEmpty(ListItem.Property(Artist_Formed))">$INFO[ListItem.Property(Artist_Formed)]</value>
		<value condition="!IsEmpty(ListItem.Property(Artist_Died))">$INFO[ListItem.Property(Artist_Died)]</value>
		<value condition="!IsEmpty(ListItem.Property(Artist_Disbanded))">$INFO[ListItem.Property(Artist_Disbanded)]</value>
	</variable>

	<variable name="episodes_UnwatchedCountLabel">
		<value condition="IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),1) | StringCompare(ListItem.Property(UnWatchedEpisodes),0)">$LOCALIZE[31148]</value>
		<value condition="StringCompare(ListItem.Property(UnWatchedEpisodes),1)">$LOCALIZE[31147]</value>
	</variable>

	<variable name="playing_Title">
		<value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Title]</value>
	</variable>

	<variable name="playlist_Type">
		<value condition="Window.IsActive(videolibrary) + !StringCompare(Playlist.Length(video),0)">ActivateWindow(videoplaylist)</value>
		<value condition="[Window.IsActive(musiclibrary) | Window.IsActive(musicfiles)] + !StringCompare(Playlist.Length(music),0)">ActivateWindow(musicplaylist)</value>
	</variable>

<!--INFODIALOG-->
	<variable name="videoInfo_Header">
		<value condition="!IsEmpty(ListItem.Property(ReleaseDate))">$INFO[ListItem.Property(ReleaseDate)]</value>
		<value condition="!IsEmpty(ListItem.Tagline)">$INFO[ListItem.Tagline]</value>		
		<value condition="Container.Content(movies) + IsEmpty(ListItem.Tagline)">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(tvshows) + !IsEmpty(Window(Home).Property(NextAired.NextDate))">$INFO[Window(Home).Property(NextAired.Status)] ($INFO[Window(Home).Property(NextAired.AirTime)])</value>
		<value condition="Container.Content(tvshows) + IsEmpty(Window(Home).Property(NextAired.NextDate))">$INFO[Window(Home).Property(NextAired.Status)]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.TVShowTitle] • $INFO[ListItem.Season,$LOCALIZE[20373] , - ]$INFO[ListItem.Episode,$LOCALIZE[20359] ]</value>
		<value condition="Container.Content(musicvideos) + !Window.IsActive(videofiles)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(movies) + ListItem.IsFolder + Substring(Container.FolderPath,videodb) + !IsEmpty(ListItem.Title)">$LOCALIZE[20338] $LOCALIZE[20141]</value>
	</variable>
	<variable name="videoInfo_Cast">
		<value condition="Container.Content(musicvideos)">$LOCALIZE[133]</value>
		<value>$LOCALIZE[206]</value>
	</variable>

<!--OSD-->
	<variable name="osd_Title">
		<value condition="Window.IsActive(visualisation) | Window.IsActive(slideshow)">$INFO[MusicPlayer.Title]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title]</value>
		<value condition="VideoPlayer.Content(episodes)">[COLOR=Color3]$INFO[VideoPlayer.TVShowTitle,,: ][/COLOR]$INFO[VideoPlayer.Title]</value>
		<value condition="VideoPlayer.Content(movies) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(files)">$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="osd_Info">
		<value condition="VideoPlayer.Content(files)">$INFO[Player.FolderPath]$INFO[VideoPlayer.RatingAndVotes, • $LOCALIZE[368],]</value>
		<value condition="VideoPlayer.Content(movies)">$INFO[VideoPlayer.Genre]$INFO[VideoPlayer.Director, • ]$INFO[VideoPlayer.Studio, • ]$INFO[VideoPlayer.Year, • ]$INFO[VideoPlayer.RatingAndVotes, • $LOCALIZE[368] ,]</value>
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.Season,$LOCALIZE[20373] , - ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] ]$INFO[VideoPlayer.RatingAndVotes, • $LOCALIZE[368] ,]</value>
		<value condition="VideoPlayer.Content(musicvideos)">$INFO[VideoPlayer.Artist]$INFO[VideoPlayer.Album, • ]$INFO[VideoPlayer.Year, • ]$INFO[VideoPlayer.RatingAndVotes, • $LOCALIZE[368] ,]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.ChapterCount">$LOCALIZE[21396]$INFO[Player.Chapter,: ]$INFO[Player.ChapterCount, / ]$INFO[Player.ChapterName, • ,]</value>
		<value>$LOCALIZE[416]</value>
	</variable>
	<!--<variable name="osd_pvrinfo">
		<value condition="VideoPlayer.Content(livetv)">[COLOR=Color3]$INFO[VideoPlayer.NextStartTime][/COLOR] $INFO[VideoPlayer.NextTitle]</value>
	</variable>-->
	<variable name="osd_Art">
		<value condition="Player.HasAudio">$INFO[Player.Art(thumb)]</value>
		<value condition="!IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value>$INFO[Player.Art(thumb)]</value>
	</variable>

<!--PLAYER-->
	<variable name="player_Plot">
		<value condition="!IsEmpty(VideoPlayer.Plotoutline) + !VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Plotoutline]</value>
		<value condition="!IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
		<value>$LOCALIZE[416]</value>
	</variable>
	<variable name="player_Status">
		<value condition="VideoPlayer.Content(LiveTV) + [Player.DisplayAfterSeek + ![Player.Forwarding | Player.Rewinding]]">$LOCALIZE[19020]$INFO[VideoPlayer.ChannelGroup, - ]</value>
		<value condition="Player.DisplayAfterSeek + ![Player.Forwarding | Player.Rewinding]">$LOCALIZE[773] $INFO[Player.SeekOffset]</value>
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking">$LOCALIZE[15107]</value>
		<value condition="[Player.Paused + !Player.Caching] + !Player.Seeking + !Player.DisplayAfterSeek">$LOCALIZE[112]</value>
		<value condition="Player.Forwarding2x">$LOCALIZE[31300]</value>
		<value condition="Player.Forwarding4x">$LOCALIZE[31301]</value>
		<value condition="Player.Forwarding8x">$LOCALIZE[31302]</value>
		<value condition="Player.Forwarding16x">$LOCALIZE[31303]</value>
		<value condition="Player.Forwarding32x">$LOCALIZE[31304]</value>
		<value condition="Player.Rewinding2x">$LOCALIZE[31305]</value>
		<value condition="Player.Rewinding4x">$LOCALIZE[31306]</value>
		<value condition="Player.Rewinding8x">$LOCALIZE[31307]</value>
		<value condition="Player.Rewinding16x">$LOCALIZE[31308]</value>
		<value condition="Player.Rewinding32x">$LOCALIZE[31309]</value>
	</variable>
	<variable name="player_SubtitleToggle">
		<value condition="!IsEmpty(VideoPlayer.SubtitlesLanguage)">$LOCALIZE[31321] ($INFO[VideoPlayer.SubtitlesLanguage])</value>
		<value>$LOCALIZE[31321]</value>
	</variable>
	<variable name="player_Time">
		<value condition="!VideoPlayer.Content(LiveTV)">$INFO[Player.Time(hh:mm:ss)]</value>
		<value>$INFO[Player.Time(hh:mm)]</value>
	</variable>
	<variable name="player_Duration">
		<value condition="!VideoPlayer.Content(LiveTV)">$INFO[Player.Duration(hh:mm:ss)]</value>
		<value>$INFO[Player.Duration(hh:mm)]</value>
	</variable>

<!--IMAGES-->
	<variable name="thumb_Landscape">
		<value condition="Window.IsActive(pictures)">$INFO[ListItem.FilenameAndPath]</value>
		<value condition="Container.Content(artists) | [Control.IsVisible(531) + [Container.Content(movies) | Container.Content(tvshows)]]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="Container.Content(episodes) | Container.Content(files) | SubString(Container.FolderPath,plugin://plugin.)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="[Container.Content(movies) | Container.Content(tvshows)] + !Skin.HasSetting(landscapethumb.enable) | [Skin.HasSetting(landscapethumb.enable) + IsEmpty(ListItem.Art(landscape))]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="[Container.Content(movies) | Container.Content(tvshows)] + Skin.HasSetting(landscapethumb.enable)">$INFO[ListItem.Art(landscape)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
	</variable>
	<variable name="thumb_Portrait">
		<value condition="Container.Content(movies) + SubString(Container.FolderPath,plugin://plugin.video.the.trailers/)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="Container.Content(actors) + IsEmpty(ListItem.Art(thumb))">thumbs/default_Actor.png</value>
		<value condition="Container.Content(actors) + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(thumb)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
	</variable>
	<variable name="thumb_PortraitRightList">
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="IsEmpty(ListItem.Art(poster)) + !IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="IsEmpty(ListItem.Art(poster)) + IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
	</variable>

	<variable name="thumb_Banner">
		<value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="IsEmpty(ListItem.Art(banner)) + !IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
	</variable>

	<variable name="thumb_Square">
		<value condition="Container.Content(albums) | Container.Content(songs) | Window.IsActive(2)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="Container.Content(addons) + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
	</variable>

	<variable name="global_Rating">
		<value condition="!IsEmpty(ListItem.Title) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons)]">$INFO[ListItem.Rating,rating/imdb/,.png]</value>
		<value condition="!IsEmpty(ListItem.Title) + ![Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons)]">$INFO[ListItem.StarRating,rating/nf-,]</value>
		<value condition="Container.Content(addons) | SubString(Container.FolderPath,addons)">$INFO[ListItem.Property(Addon.StarRating),rating/nf-,]</value>
	</variable>
	<variable name="global_Rating-fo">
		<value condition="!IsEmpty(ListItem.Title)">$INFO[ListItem.StarRating,rating/fo-,]</value>
		<value condition="Container.Content(addons) | SubString(Container.FolderPath,addons)">$INFO[ListItem.Property(Addon.StarRating),rating/fo-,]</value>
	</variable>
	<variable name="custom_Rating.Container">
		<value condition="!IntegerGreaterThan(ListItem.Property(Rating),1)">rating/nf-rating0.png</value>
		<value condition="!IntegerGreaterThan(ListItem.Property(Rating),2)">rating/nf-rating1.png</value>
		<value condition="!IntegerGreaterThan(ListItem.Property(Rating),4)">rating/nf-rating2.png</value>
		<value condition="!IntegerGreaterThan(ListItem.Property(Rating),6)">rating/nf-rating3.png</value>
		<value condition="!IntegerGreaterThan(ListItem.Property(Rating),8)">rating/nf-rating4.png</value>
		<value>rating/nf-rating5.png</value>
	</variable>
	<variable name="custom_Rating.Info">
		<value condition="!IntegerGreaterThan(Container(52).ListItem.Property(Rating),1)">rating/nf-rating0.png</value>
		<value condition="!IntegerGreaterThan(Container(52).ListItem.Property(Rating),2)">rating/nf-rating1.png</value>
		<value condition="!IntegerGreaterThan(Container(52).ListItem.Property(Rating),4)">rating/nf-rating2.png</value>
		<value condition="!IntegerGreaterThan(Container(52).ListItem.Property(Rating),6)">rating/nf-rating3.png</value>
		<value condition="!IntegerGreaterThan(Container(52).ListItem.Property(Rating),8)">rating/nf-rating4.png</value>
		<value>rating/nf-rating5.png</value>
	</variable>
	<variable name="art_ClearLogo">
		<value condition="[Container.Content(movies) | Container.Content(tvshows)] + Control.IsVisible(531)">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="Container.Content(movies) + Skin.HasSetting(logos.movies.enable) + [IsEmpty(ListItem.Art(landscape)) | [!IsEmpty(ListItem.Art(landscape)) + !Skin.HasSetting(landscapethumb.enable)]]">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="Container.Content(tvshows) + Skin.HasSetting(logos.tvshows.enable) + [IsEmpty(ListItem.Art(landscape)) | [!IsEmpty(ListItem.Art(landscape)) + !Skin.HasSetting(landscapethumb.enable)]]">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="Container.Content(episodes) + Skin.HasSetting(logos.tvshows.enable) + [StringCompare(Container.FolderPath,videodb://recentlyaddedepisodes/) |StringCompare(Container.FolderPath,special://skin/playlists/episodes/unwatched.xsp)]">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
	</variable>

<!--FLAGS-->
	<variable name="flag_Studio">
		<value condition="Container.Content(movies)">$INFO[Listitem.Studio,flags/studios/,.png]</value>
		<value condition="![Control.IsVisible(554) | Control.IsVisible(555) | Control.IsVisible(55)] + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">$INFO[Listitem.Studio,flags/networks/,.png]</value>
		<value condition="[Control.IsVisible(554) | Control.IsVisible(555) | Control.IsVisible(55)] + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">$INFO[Listitem.Studio,flags/studios/,.png]</value>
		<value condition="Container.Content(musicvideos)">$INFO[Listitem.Studio,flags/labels/,.png]</value>
		<value condition="Window.IsVisible(musiclibrary)">$INFO[Listitem.Property(Album_Label),flags/labels/,.png]</value>
	</variable>
	<variable name="flag_WatchStatus">
		<value condition="ListItem.IsResumable + Skin.HasSetting(overlay.resumable)">$INFO[ListItem.Overlay,overlays/info/inprogress/]</value>
		<value condition="Skin.HasSetting(overlay.enable)">$INFO[ListItem.Overlay,overlays/info/watched/]</value>
		<value condition="Skin.HasSetting(overlay.enable)">$INFO[ListItem.Overlay,overlays/info/unwatched/]</value>
		<value condition="!IsEmpty(ListItem.Overlay)">$INFO[ListItem.Overlay]</value>
	</variable>
	<variable name="flag_VideoType">
		<value condition="ListItem.IsStereoscopic">flags/video/3D/nf-3D.png</value>
		<value condition="IntegerGreaterThan(ListItem.VideoResolution,540)">flags/video/HD/nf-HD.png</value>
		<value condition="!IntegerGreaterThan(ListItem.VideoResolution,540) + !SubString(ListItem.Icon,default) + !ListItem.IsFolder">flags/video/SD/nf-SD.png</value>
	</variable>
	<variable name="flag_VideoType-fo">
		<value condition="ListItem.IsStereoscopic">flags/video/3D/fo-3D.png</value>
		<value condition="IntegerGreaterThan(ListItem.VideoResolution,540)">flags/video/HD/fo-HD.png</value>
		<value condition="!IntegerGreaterThan(ListItem.VideoResolution,540) + !SubString(ListItem.Icon,default) + !ListItem.IsFolder">flags/video/SD/fo-SD.png</value>
	</variable>
	<variable name="video_Type">
		<value condition="ListItem.IsStereoscopic">3D</value>
		<value condition="IntegerGreaterThan(ListItem.VideoResolution,540)">HD</value>
		<value condition="StringCompare(ListItem.VideoResolution,4K)">4K</value>
	</variable>

<!--PVR-->	
	<variable name="pvr_Status">
		<value condition="![ListItem.HasTimer + ListItem.IsRecording]">pvr/status/none-nf.png</value>
		<value condition="ListItem.HasTimer + !ListItem.IsRecording">pvr/status/timer.png</value>
		<value condition="ListItem.IsRecording">pvr/status/recording.png</value>
		<value>pvr/status/none-nf.png</value>
	</variable>
	<variable name="pvr_TVChannelGroup">
		<value condition="Control.HasFocus(32)">$LOCALIZE[19180]$INFO[Container.FolderName,: ]</value>
		<value>$LOCALIZE[19180]</value>
	</variable>
	<variable name="pvr_RadioChannelGroup">
		<value condition="Control.HasFocus(33)">$LOCALIZE[19021]$INFO[Container.FolderName,: ]</value>
		<value>$LOCALIZE[19021]</value>
	</variable>

<!--WINDOW TITLES-->
	<variable name="window_Title.Video">
		<value condition="IsEmpty(Container.FolderPath)">$LOCALIZE[157]</value>
		<!--<value condition="SubString(Container.FolderPath,?type=recommendedmovies)">$LOCALIZE[342] [COLOR=Color2]$LOCALIZE[31013][/COLOR]</value>-->

		<value condition="StringCompare(Container.FolderPath,plugin://service.library.data.provider/)">$LOCALIZE[14022]</value>
		<value condition="StringCompare(Container.FolderPath,videodb://movies/)">$LOCALIZE[342]</value>
		<value condition="StringCompare(Container.FolderPath,special://skin/playlists/movies/unwatched.xsp)">$LOCALIZE[342] [COLOR=Color2]$LOCALIZE[16101][/COLOR]</value>
		<value condition="StringCompare(Container.FolderPath,special://skin/playlists/albums/recommended.xsp)">$LOCALIZE[1211] [COLOR=Color2]$LOCALIZE[517][/COLOR]</value>
		<value condition="StringCompare(Container.FolderPath,special://skin/playlists/movies/inprogress.xsp)">$LOCALIZE[342] [COLOR=Color2]$LOCALIZE[575][/COLOR]</value>
		<value condition="StringCompare(Container.FolderPath,special://skin/playlists/episodes/unwatched.xsp)">$LOCALIZE[20360] [COLOR=Color2]$LOCALIZE[16101][/COLOR]</value>
		<value condition="StringCompare(Container.FolderName,$LOCALIZE[626])">$LOCALIZE[20343] [COLOR=Color2]$LOCALIZE[575][/COLOR]</value>
		<value condition="StringCompare(Container.FolderPath,videodb://tvshows/)">$LOCALIZE[20343]</value>
		<value condition="StringCompare(Container.FolderPath,videodb://musicvideos/)">$LOCALIZE[20389]</value>
		<value condition="StringCompare(Container.FolderPath,special://videoplaylists/)">$LOCALIZE[20012]</value>
		<value condition="StringCompare(Container.FolderPath,sources://video/)">$LOCALIZE[744]</value>
		<value condition="StringCompare(Container.FolderPath,addons://sources/video/)">$LOCALIZE[1037]</value>

		<value condition="SubString(Container.FolderPath,plugin://service.library.data.provider/) + StringCompare(ListItem.Icon,DefaultFolderBack.png)">$INFO[Container().ListItem(1).Property(type)]</value>
		<value condition="SubString(Container.FolderPath,plugin://service.library.data.provider/)">$INFO[ListItem.Property(type)]</value>

		<value condition="SubString(Container.FolderPath,plugin://plugin.video)">$LOCALIZE[24001] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		
		<value condition="SubString(Container.FolderPath,videodb://movies/,left)">$LOCALIZE[342] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		<value condition="SubString(Container.FolderPath,videodb://recentlyaddedmovies/)">$LOCALIZE[31704]</value>
		
		
		<value condition="SubString(Container.FolderPath,videodb://recentlyaddedepisodes/)">$LOCALIZE[31703]</value>
		
		<value condition="Container.Content(seasons) + IsEmpty(Container().ListItem(0).TVShowTitle)">$INFO[Container().ListItem(1).TVShowTitle]</value>
		<value condition="Container.Content(seasons)">$INFO[Container().ListItem().TVShowTitle]</value>
		<value condition="Container.Content(episodes) + IsEmpty(Container().ListItem(0).TVShowTitle)">$INFO[Container().ListItem(1).TVShowTitle]</value>
		<value condition="Container.Content(episodes)">$INFO[Container().ListItem().TVShowTitle]</value>
		
		<value condition="SubString(Container.FolderPath,videodb://tvshows/,left)">$LOCALIZE[20343] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		
		<value condition="SubString(Container.FolderPath,videodb://musicvideos/)">$LOCALIZE[20389] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		<value condition="SubString(Container.FolderPath,videodb://recentlyaddedmusicvideos/)">$LOCALIZE[31710]</value>
		
		<value condition="SubString(Container.FolderPath,special://profile/playlists/video/)">$LOCALIZE[559] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		
		<value condition="Container.Content(files)">$LOCALIZE[744] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
	</variable>
	<variable name="window_Title.Music">
		<value condition="StringCompare(Container.FolderPath,videodb://musicvideos/)">$LOCALIZE[20389]</value>
		<value condition="SubString(Container.FolderPath,videodb://musicvideos/)">$LOCALIZE[20389] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		<value condition="![SubString(Container.FolderPath,musicdb://6/) | SubString(Container.FolderPath,musicdb://7/)]">$LOCALIZE[2] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		<value condition="SubString(Container.FolderPath,musicdb://6/)">$LOCALIZE[31932]</value>
		<value condition="SubString(Container.FolderPath,musicdb://7/)">$LOCALIZE[31705]</value>
	</variable>
	<variable name="window_Title.System">
		<value condition="Window.IsActive(settings)">xbmc [COLOR=Color2]$LOCALIZE[10004][/COLOR]</value>
		<value condition="Window.IsActive(systeminfo)">$LOCALIZE[31706]</value>
		<value condition="Window.IsActive(profiles)">$LOCALIZE[5] [COLOR=Color2]$LOCALIZE[13200][/COLOR]</value>
		<value condition="Window.IsActive(appearancesettings)">$LOCALIZE[480] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(videossettings)">$LOCALIZE[157] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(programssettings)">$LOCALIZE[0] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(musicsettings)">$LOCALIZE[2] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(picturessettings)">$LOCALIZE[1] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(networksettings)">$LOCALIZE[705] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(weathersettings)">$LOCALIZE[12600] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(systemsettings)">$LOCALIZE[13000] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(tvsettings)">$LOCALIZE[19020] [COLOR=Color2]$LOCALIZE[5][/COLOR]</value>
		<value condition="Window.IsActive(filemanager)">$LOCALIZE[7]</value>
		<value condition="Window.IsActive(skinsettings)">$LOCALIZE[5] [COLOR=Color2]$LOCALIZE[166][/COLOR]</value>
	</variable>
	<variable name="window_Title.Addons">
		<value condition="SubString(Container.FolderPath,addons://enabled/)">$LOCALIZE[24062]</value>
		<value condition="SubString(Container.FolderPath,addons://disabled/)">$LOCALIZE[24039]</value>
		<value condition="SubString(Container.FolderPath,addons://downloading/)">$LOCALIZE[24067]</value>
		<value condition="SubString(Container.FolderPath,addons://outdated/)">$LOCALIZE[24043]</value>
		<value condition="SubString(Container.FolderPath,addons://repos/)">$LOCALIZE[24000] [COLOR=Color2]$LOCALIZE[31700][/COLOR]</value>
		<value condition="SubString(Container.FolderPath,addons://all/)">[COLOR=Color2]$LOCALIZE[593][/COLOR] $LOCALIZE[24001]</value>
		<value condition="SubString(Container.FolderPath,addons://all/) + !stringcompare(Container.FolderPath,addons://all/)">$INFO[Container.Property(addoncategory)]</value>
		<value condition="SubString(Container.FolderPath,addons://search/)">$LOCALIZE[283]</value>
		<value condition="SubString(Container.FolderPath,addons://repo.) | SubString(Container.FolderPath,addons://repository.)">$INFO[Container.Property(reponame)]</value>
		<value>$LOCALIZE[24001]</value>
	</variable>
	<variable name="window_Title.PVR">
		<value condition="SubString(Container.FolderPath,pvr://channels/tv/)">$LOCALIZE[19020] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		<value condition="SubString(Container.FolderPath,pvr://channels/radio/)">$LOCALIZE[19021] [COLOR=Color2]$INFO[Container.FolderName][/COLOR]</value>
		<value condition="SubString(Container.FolderPath,pvr://recordings/) | SubString(Container.FolderPath,pvr://timers/)">$INFO[Container.FolderName]</value>
		<value condition="Control.IsVisible(16)">$LOCALIZE[19069] [COLOR=Color2]$LOCALIZE[19030][/COLOR]</value>
		<value condition="Control.IsVisible(10)">$LOCALIZE[19069] [COLOR=Color2]$LOCALIZE[19032][/COLOR]</value>
		<value condition="Control.IsVisible(13)">$LOCALIZE[19163]</value>
		<value condition="Control.IsVisible(17)">$LOCALIZE[137]</value>
	</variable>
	<variable name="window_Title.Pictures">
		<value condition="!SubString(Container.FolderPath,plugin)">$LOCALIZE[1]</value>
		<value>$INFO[Container.FolderName]</value>
	</variable>
	<variable name="window_Title.Playlists">
		<value condition="Window.IsVisible(videoplaylist) + !Window.IsActive(movieinformation)">$LOCALIZE[157] [COLOR=Color2]$LOCALIZE[559][/COLOR]</value>
		<value condition="Window.IsVisible(musicplaylist) + !Window.IsActive(musicinformation)">$LOCALIZE[2] [COLOR=Color2]$LOCALIZE[559][/COLOR]</value>
	</variable>
	<variable name="window_Title.Weather">
		<value condition="Window.IsVisible(Weather) + Weather.IsFetched">$INFO[Window.Property(WeatherProvider)]</value>
		<value>$LOCALIZE[12600]</value>
	</variable>

<!--DEBUG-->
	<variable name="debug_WindowName">
		<value condition="Window.IsVisible(AddonBrowser.xml)">AddonBrowser.xml</value>
		<value condition="Window.IsVisible(FileManager.xml)">FileManager.xml</value>
		<value condition="Window.IsVisible(Home.xml)">Home.xml</value>
		<value condition="Window.IsVisible(LoginScreen.xml)">LoginScreen.xml</value>
		<value condition="Window.IsVisible(MyMusicNav.xml)">MyMusicNav.xml</value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)">MyMusicPlaylist.xml</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml)">MyMusicPlaylistEditor.xml</value>
		<value condition="Window.IsVisible(MyMusicSongs.xml)">MyMusicSongs.xml</value>
		<value condition="Window.IsVisible(MyPics.xml)">MyPics.xml</value>
		<value condition="Window.IsVisible(MyPrograms.xml)">MyPrograms.xml</value>
		<value condition="Window.IsVisible(MyVideoNav.xml)">MyVideoNav.xml</value>
		<value condition="Window.IsVisible(MyVideoPlaylist.xml)">MyVideoPlaylist.xml</value>
		<value condition="Window.IsVisible(MyWeather.xml)">MyWeather.xml</value>
		<value condition="Window.IsVisible(Settings.xml)">Settings.xml</value>
		<value condition="Window.IsVisible(SettingsCategory.xml)">SettingsCategory.xml</value>
		<value condition="Window.IsVisible(SettingsProfile.xml)">SettingsProfile.xml</value>
		<value condition="Window.IsVisible(SkinSettings.xml)">SkinSettings.xml</value>
		<value condition="Window.IsVisible(DialogAddonInfo.xml)">DialogAddonInfo.xml</value>
		<value condition="Window.IsVisible(DialogAddonSettings.xml)">DialogAddonSettings.xml</value>
		<value condition="Window.IsVisible(DialogAlbumInfo.xml)">DialogAlbumInfo.xml</value>
		<value condition="Window.IsVisible(DialogBusy.xml)">DialogBusy.xml</value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)">DialogButtonMenu.xml</value>
		<value condition="Window.IsVisible(DialogContentSettings.xml)">DialogContentSettings.xml</value>
		<value condition="Window.IsVisible(DialogContextMenu.xml)">DialogContextMenu.xml</value>
		<value condition="Window.IsVisible(DialogExtendedProgressBar.xml)">DialogExtendedProgressBar.xml</value>
		<value condition="Window.IsVisible(DialogFavourites.xml)">DialogFavourites.xml</value>
		<value condition="Window.IsVisible(DialogFileStacking.xml)">DialogFileStacking.xml</value>
		<value condition="Window.IsVisible(DialogKaiToast.xml)">DialogKaiToast.xml</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml)">DialogFullScreenInfo.xml</value>
		<value condition="Window.IsVisible(DialogKaraokeSongSelector.xml)">DialogKaraokeSongSelector.xml</value>
		<value condition="Window.IsVisible(DialogKaraokeSongSelectorLarge.xml)">DialogKaraokeSongSelectorLarge.xml</value>
		<value condition="Window.IsVisible(DialogKeyboard.xml)">DialogKeyboard.xml</value>
		<value condition="Window.IsVisible(DialogMediaFilter.xml)">DialogMediaFilter.xml</value>
		<value condition="Window.IsVisible(DialogMediaSource.xml)">DialogMediaSource.xml</value>
		<value condition="Window.IsVisible(DialogMuteBug.xml)">DialogMuteBug.xml</value>
		<value condition="Window.IsVisible(DialogNetworkSetup.xml)">DialogNetworkSetup.xml</value>
		<value condition="Window.IsVisible(DialogNumeric.xml)">DialogNumeric.xml</value>
		<value condition="Window.IsVisible(DialogOK.xml)">DialogOK.xml</value>
		<value condition="Window.IsVisible(DialogPeripheralManager.xml)">DialogPeripheralManager.xml</value>
		<value condition="Window.IsVisible(DialogPeripheralSettings.xml)">DialogPeripheralSettings.xml</value>
		<value condition="Window.IsVisible(DialogPictureInfo.xml)">DialogPictureInfo.xml</value>
		<value condition="Window.IsVisible(DialogProgress.xml)">DialogProgress.xml</value>
		<value condition="Window.IsVisible(DialogPVRChannelManager.xml)">DialogPVRChannelManager.xml</value>
		<value condition="Window.IsVisible(DialogPVRChannelsOSD.xml)">DialogPVRChannelsOSD.xml</value>
		<value condition="Window.IsVisible(DialogPVRGroupManager.xml)">DialogPVRGroupManager.xml</value>
		<value condition="Window.IsVisible(DialogPVRGuideInfo.xml)">DialogPVRGuideInfo.xml</value>
		<value condition="Window.IsVisible(DialogPVRGuideOSD.xml)">DialogPVRGuideOSD.xml</value>
		<value condition="Window.IsVisible(DialogPVRGuideSearch.xml)">DialogPVRGuideSearch.xml</value>
		<value condition="Window.IsVisible(DialogPVRRecordingInfo.xml)">DialogPVRRecordingInfo.xml</value>
		<value condition="Window.IsVisible(DialogPVRTimerSettings.xml)">DialogPVRTimerSettings.xml</value>
		<value condition="Window.IsVisible(DialogSeekbar.xml)">DialogSeekbar.xml</value>
		<value condition="Window.IsVisible(DialogSelect.xml)">DialogSelect.xml</value>
		<value condition="Window.IsVisible(DialogSlider.xml)">DialogSlider.xml</value>
		<value condition="Window.IsVisible(DialogSongInfo.xml)">DialogSongInfo.xml</value>
		<value condition="Window.IsVisible(DialogPictureInfo.xml)">DialogPictureInfo.xml</value>
		<value condition="Window.IsVisible(DialogSubtitles.xml)">DialogSubtitles.xml</value>
		<value condition="Window.IsVisible(DialogTextViewer.xml)">DialogTextViewer.xml</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml)">DialogVideoInfo.xml</value>
		<value condition="Window.IsVisible(DialogVolumeBar.xml)">DialogVolumeBar.xml</value>
		<value condition="Window.IsVisible(DialogYesNo.xml)">DialogYesNo.xml</value>
		<value condition="Window.IsVisible(FileBrowser.xml)">FileBrowser.xml</value>
		<value condition="Window.IsVisible(LockSettings.xml)">LockSettings.xml</value>
		<value condition="Window.IsVisible(MusicKaraokeLyrics.xml)">MusicKaraokeLyrics.xml</value>
		<value condition="Window.IsVisible(MusicOSD.xml)">MusicOSD.xml</value>
		<value condition="Window.IsVisible(MusicOverlay.xml)">MusicOverlay.xml</value>
		<value condition="Window.IsVisible(MusicVisualisation.xml)">MusicVisualisation.xml</value>
		<value condition="Window.IsVisible(PlayerControls.xml)">PlayerControls.xml</value>
		<value condition="Window.IsVisible(ProfileSettings.xml)">ProfileSettings.xml</value>
		<value condition="Window.IsVisible(SettingsScreenCalibration.xml)">SettingsScreenCalibration.xml</value>
		<value condition="Window.IsVisible(SettingsUICalibration.xml)">SettingsUICalibration.xml</value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml)">SettingsSystemInfo.xml</value>
		<value condition="Window.IsVisible(SlideShow.xml)">SlideShow.xml</value>
		<value condition="Window.IsVisible(SmartPlaylistEditor.xml)">SmartPlaylistEditor.xml</value>
		<value condition="Window.IsVisible(SmartPlaylistRule.xml)">SmartPlaylistRule.xml</value>
		<value condition="Window.IsVisible(VideoOSD.xml)">VideoOSD.xml</value>
		<value condition="Window.IsVisible(VideoOSDBookmarks.xml)">VideoOSDBookmarks.xml</value>
		<value condition="Window.IsVisible(VideoOSDSettings.xml)">VideoOSDSettings.xml</value>
		<value condition="Window.IsVisible(VideoOverlay.xml)">VideoOverlay.xml</value>
		<value condition="Window.IsVisible(VisualisationPresetList.xml)">VisualisationPresetList.xml</value>
		<value condition="Window.IsVisible(custom_Edit.xml)">custom_Edit.xml</value>
		<value condition="Window.IsVisible(custom_HomeMenuSettings.xml)">custom_HomeMenuSettings.xml</value>
		<value condition="Window.IsVisible(custom_Search.xml)">custom_Search.xml</value>
		<value condition="Window.IsVisible(custom_Watchlist.xml)">custom_Watchlist.xml</value>
		<value condition="Window.IsVisible(script-globalsearch-contextmenu.xml)">script-globalsearch-contextmenu.xml</value>
		<value condition="Window.IsVisible(script-globalsearch-infodialog.xml)">script-globalsearch-infodialog.xml</value>
		<value condition="Window.IsVisible(script-globalsearch-main.xml)">script-globalsearch-main.xml</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml)">script-NextAired-TVGuide.xml</value>
		<value condition="Window.IsVisible(script-RSS_Editor-rssEditor.xml)">script-RSS_Editor-rssEditor.xml</value>
		<value condition="Window.IsVisible(script-RSS_Editor-setEditor.xml)">script-RSS_Editor-setEditor.xml</value>
		<value condition="Window.IsVisible(script-XBMC_Lyrics-main.xml)">script-XBMC_Lyrics-main.xml</value>
	</variable>
</includes>